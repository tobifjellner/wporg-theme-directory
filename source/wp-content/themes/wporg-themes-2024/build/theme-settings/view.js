import*as t from"@wordpress/interactivity";var e={d:(t,r)=>{for(var s in r)e.o(r,s)&&!e.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:r[s]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)};const r=(o={getContext:()=>t.getContext,store:()=>t.store},i={},e.d(i,o),i),{state:s}=(0,r.store)("wporg/themes/theme-settings",{state:{isError:!1,isSuccess:!1,isSubmitting:!1,get resultMessage(){const{labels:t}=(0,r.getContext)();return s.isSuccess?t.success:s.isError?t.error:""}},actions:{onChange(){s.isSuccess=!1,s.isError=!1},*onSubmit(t){t.preventDefault();const e=(0,r.getContext)(),{type:o,slug:i,url:n}=e,a=t.target.elements.url;if(!a)return;const c=a.value;s.isSubmitting=!0;try{const t="commercial"===o?"supportURL":"repositoryURL",r=yield wp.apiFetch({path:"/themes/v1/theme/"+i+"/"+o,method:"POST",data:{[t]:c}});if(void 0===r[t])throw new Error("Invalid response from API.");e.url=r[t],s.isSuccess=!0}catch(t){a.value=n,s.isError=!0}s.isSubmitting=!1}}});var o,i;